DANNYS DINER

https://medium.com/analytics-vidhya/8-week-sql-challenge-case-study-week-1-dannys-diner-2ba026c897ab


CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');


Each of the following case study questions can be answered using a single SQL statement:

1.	What is the total amount each customer spent at the restaurant?
SELECT customer_id,
SUM(price) 
FROM dannys_diner.sales
join dannys_diner.menu
on sales.product_id=menu.product_id
GROUP by customer_id;

2.	How many days has each customer visited the restaurant?

select customer_id,count(distinct order_date) from  dannys_diner.sales
group by customer_id


3.	What was the first item from the menu purchased by each customer?

WITH FIRSTORDER AS (
SELECT sales.customer_id, menu.product_name,
row_number() over(partition by sales.customer_id
order by sales.product_id,sales.order_date)as itemorder
from dannys_diner.sales
    JOIN dannys_diner.menu
    ON sales.product_id = menu.product_id)
select * from firstorder where itemorder =1

4.	What is the most purchased item on the menu and how many times was it purchased by all customers?

select menu.product_name,count(sales.product_id) as count
 FROM dannys_diner.sales
    JOIN dannys_diner.menu
    ON sales.product_id = menu.product_id
    group by menu.product_name
order by count desc
limit 1

5.	Which item was the most popular for each customer?

with rank as(
select sales.customer_id,
menu.product_name,
count(*) as order_count,
dense_rank() over(partition by sales.customer_id
order by count(sales.customer_id)desc) as rank
 FROM dannys_diner.sales
    JOIN dannys_diner.menu
    ON sales.product_id = menu.product_id
group by sales.customer_id,menu.product_name
)
Select Customer_id,Product_name,order_Count
From rank
where rank = 1

6.	Which item was purchased first by the customer after they became a member?
WITH member_sales_cte AS 
(
SELECT s.customer_id, m.join_date, s.order_date, s.product_id,
DENSE_RANK() OVER(PARTITION BY s.customer_id
ORDER BY s.order_date) AS rank
FROM sales AS s
JOIN members AS m
ON s.customer_id = m.customer_id
WHERE s.order_date >= m.join_date
)

SELECT s.customer_id, s.order_date, m2.product_name 
FROM member_sales_cte AS s
JOIN menu AS m2
ON s.product_id = m2.product_id
WHERE rank = 1;

7.	Which item was purchased just before the customer became a member?
WITH member_sales_cte AS 
(
SELECT s.customer_id, m.join_date, s.order_date, s.product_id,
DENSE_RANK() OVER(PARTITION BY s.customer_id
ORDER BY s.order_date) AS rank
FROM sales AS s
JOIN members AS m
ON s.customer_id = m.customer_id
WHERE s.order_date <= m.join_date
)

SELECT s.customer_id, s.order_date, m2.product_name 
FROM member_sales_cte AS s
JOIN menu AS m2
ON s.product_id = m2.product_id
WHERE rank = 1;



8.	What is the total items and amount spent for each member before they became a member?


SELECT s.customer_id, COUNT(DISTINCT s.product_id) AS unique_menu_item, SUM(mm.price) AS total_sales
FROM dannys_diner.sales AS s
JOIN dannys_diner.members AS m
ON s.customer_id = m.customer_id
JOIN dannys_diner.menu AS mm
ON s.product_id = mm.product_id
WHERE s.order_date < m.join_date
GROUP BY s.customer_id;

9.	If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?


WITH pricepoints AS
(
SELECT *, 
CASE
WHEN product_id = 1 THEN price * 20
ELSE price * 10
END AS points
FROM dannys_diner.menu
) SELECT s.customer_id, SUM(p.points) AS totalpoints
FROM pricepoints AS p
JOIN dannys_diner.sales AS s
ON p.product_id = s.product_id
GROUP BY s.customer_id 
order by totalpoints desc
;


10.	In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

